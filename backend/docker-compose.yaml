version: '3'

services:
  mongo:
    image: mongo:latest
    container_name: mongo_db
    restart: always
    networks:
      - backend-network
    volumes:
      - ./mongo_data:/data/db
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD", "echo", "db.runCommand(\"ping\").ok", "|", "mongosh", "mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@localhost:27017/?authSource=${MYSQL_DATABASE}", "--quiet"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  mysql:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    networks:
      - backend-network
    env_file:
      - ./.env
    volumes:
      - ./mysql_data:/var/lib/mysql
      - ./auth-service/sql_script.sql:/docker-entrypoint-initdb.d/0_auth.sql
      - ./policy-service/sql_script.sql:/docker-entrypoint-initdb.d/1_polices.sql
      - ./users-service/sql_script.sql:/docker-entrypoint-initdb.d/2_users.sql
      - ./campaign-service/sql_script.sql:/docker-entrypoint-initdb.d/3_campaign.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD", "ping"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 60s

  auth-service:
    build:
      context: ./auth-service
    container_name: auth-service
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - backend-network
    volumes:
      - ./certs:/certs
    env_file:
      - ./.env
    environment:
      - MYSQL_CONNECTION_STRING=server=mysql;database=$MYSQL_DATABASE;user=$MYSQL_USER;password=$MYSQL_PASSWORD;
      - PRIVATE_KEY_PATH=/certs/private.pem
      - PUBLIC_KEY_PATH=/certs/public.pem

  policy-service:
    build:
      context: ./policy-service
    container_name: policy-service
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - backend-network
    env_file:
      - ./.env
    environment:
      - MYSQL_CONNECTION_STRING=server=mysql;database=$MYSQL_DATABASE;user=$MYSQL_USER;password=$MYSQL_PASSWORD;

  users-service:
    build:
      context: ./users-service
    container_name: users-service
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - backend-network
    env_file:
      - ./.env
    environment:
      - MYSQL_CONNECTION_STRING=server=mysql;database=$MYSQL_DATABASE;user=$MYSQL_USER;password=$MYSQL_PASSWORD;

  campaign-service:
    build:
      context: ./campaign-service
    container_name: campaign-service
    depends_on:
      mongo:
        condition: service_healthy
      mysql:
        condition: service_healthy
    networks:
      - backend-network
    env_file:
      - ./.env
    environment:
      - MONGO_CONNECTION_STRING=mongodb://$MONGO_INITDB_ROOT_USERNAME:$MONGO_INITDB_ROOT_PASSWORD@mongo:27017/
      - MYSQL_CONNECTION_STRING=server=mysql;database=$MYSQL_DATABASE;user=$MYSQL_USER;password=$MYSQL_PASSWORD;

  notes-service:
    build:
      context: ./notes-service
    container_name: notes-service
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - backend-network
    env_file:
      - ./.env
    environment:
      - MONGO_CONNECTION_STRING=mongodb://$MONGO_INITDB_ROOT_USERNAME:$MONGO_INITDB_ROOT_PASSWORD@mongo:27017/
      - MONGO_DATABASE=tdn-notes

  api-gateway:
    build: 
      context: ./api-gateway
    container_name: api-gateway
    depends_on:
      notes-service:
        condition: service_started
      campaign-service:
        condition: service_started
      users-service:
        condition: service_started
      policy-service:
        condition: service_started
      auth-service:
        condition: service_started
    networks:
      - backend-network
    ports:
      - "5000:5000"
    env_file:
      - ./.env
    environment:
      - AUTH_SERVICE_URL=http://auth-service:8080
      - POLICY_SERVICE_URL=http://policy-service:8080
      - USERS_SERVICE_URL=http://users-service:8080
      - CAMPAIGN_SERVICE_URL=http://campaign-service:8080
      - NOTES_SERVICE_URL=http://notes-service:8080

networks:
  backend-network:
    driver: bridge