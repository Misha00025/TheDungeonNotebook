version: '3'

services:
  campaign-mongo:
    image: mongo:latest
    container_name: campaign-mongo
    restart: always
    networks:
      - backend-network
    volumes:
      - ./campaign-mongo-data:/data/db
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD", "echo", "db.runCommand(\"ping\").ok", "|", "mongosh", "mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@localhost:27017/?authSource=${MYSQL_DATABASE}", "--quiet"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  campaign-mysql:
    image: mysql:8.0
    container_name: campaign-mysql
    restart: always
    networks:
      - backend-network
    env_file:
      - ./.env
    volumes:
      - ./campaign-mysql-data:/var/lib/mysql
      - ./campaign-service/sql_script.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD", "ping"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 60s

  auth-mysql:
    image: mysql:8.0
    container_name: auth-mysql
    restart: always
    networks:
      - backend-network
    env_file:
      - ./.env
    volumes:
      - ./auth-mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD", "ping"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 60s
      
  auth-service:
    build: ./auth-service
    container_name: auth-service
    depends_on:
      auth-mysql:
        condition: service_healthy
    networks:
      - backend-network
    env_file:
      - ./.env
    environment:
      - DB_HOST=auth-mysql
      - DB_PORT=3306

  campaign-service:
    build: ./campaign-service
    container_name: campaign-service
    depends_on:
      campaign-mongo:
        condition: service_healthy
      campaign-mysql:
        condition: service_healthy
    networks:
      - backend-network
    env_file:
      - ./.env
    environment:
      - MONGO_CONNECTION_STRING=mongodb://$MONGO_INITDB_ROOT_USERNAME:$MONGO_INITDB_ROOT_PASSWORD@campaign-mongo:27017/
      - MYSQL_CONNECTION_STRING=server=campaign-mysql;database=$MYSQL_DATABASE;user=$MYSQL_USER;password=$MYSQL_PASSWORD;

  api-proxy:
    build: ./api-proxy
    container_name: api-proxy
    depends_on:
      campaign-service:
        condition: service_started
      auth-service:
        condition: service_started
    networks:
      - backend-network
    ports:
      - "5000:5000"
    env_file:
      - ./.env
    environment:
      - AUTH_SERVICE_URL=http://auth-service:5000
      - BACKEND_URL=http://campaign-service:8080

networks:
  backend-network:
    driver: bridge
